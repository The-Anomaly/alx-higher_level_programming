==========================
The ``2-matrix_divided`` module
==========================

Using ``matrix_divided``
-------------------

    # Import of the module to test
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use:
    # Correct arguments
    >>> matrix = [[1, 2, 3],[4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    # No arguments
    >>> print(matrix_divided()) #doctest: +NORMALIZE_WHITESPACE
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div' 

    # One argument
    >>> print(matrix_divided(matrix))
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    # Empty list as matrix
    >>> print(matrix_divided([], 2))
    []

    # Wrong matrix dimension - less than 2
    >>> print(matrix_divided([2,4,6], 2))
    Traceback (most recent call last):
        ...
    TypeError: 'int' object is not iterable

    # Wrong matrix dimension - greater than 2
    >>> matrix = [[[2,3,4], 2, 3],[4, 5, 6], [7, 8, 9]]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    # Zero division
    >>> matrix = [[1, 2, 3],[4, 5, 6], [7, 8, 9]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    # Divisor as a string
    >>> matrix = [[1, 2, 3],[4, 5, 6], [7, 8, 9]]
    >>> print(matrix_divided(matrix, "3"))
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    # Matrix as a string
    >>> print(matrix_divided("matrix", 3))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
